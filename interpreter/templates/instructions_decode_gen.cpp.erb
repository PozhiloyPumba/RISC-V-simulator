// Autogenerated file - do not change!

#include "interpreter/instruction.h"
#include "interpreter/decoder.h"
#include "generated/instructions_decode_gen.h"
#include "common/bitops.h"

namespace simulator::interpreter {

Instruction Decoder::DecodeInstr (uint32_t raw_inst) {
	Instruction instr;
	<%=generate_switch_case(@decodertree, "", 0)%>
	return instr;
}

<%for instruction in @instructions%><%specials = []%>
<%=get_decl_class_func_name(instruction) + " {"%>
	Instruction instr;
	instr.opcode = ApplyMask<uint32_t, OPCODE_MASK>(raw_inst);
	instr.inst_id = <%=get_inst_name(instruction)%>;
<%for field in instruction["fields"]%><%field_type = @fields[field]%><%if reg?(field_type)%>
<%=get_reg(field_type)%><%elsif imm?(field_type)%>
<%=get_imm(field_type)%><%else specials << (field_type)%><%end%><%end%>
<%=get_specials_in_imm(specials) unless specials.empty?%>
	return instr;
<%="}"%>
<%end%>

} // namespace simulator::interpreter